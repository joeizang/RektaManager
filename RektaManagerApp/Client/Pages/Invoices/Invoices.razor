@page "/invoices"
@using RektaManagerApp.Shared
@using RektaManagerApp.Shared.ComponentModels.Invoices
@inject IHttpService Http
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center">
    <span class="h3">Invoices Listing</span>
</div>

<div class="d-flex justify-content-between align-items-center">
    <span>
        <button @onclick="@(() => Navigation.NavigateTo("invoices/issue-invoice"))" class="btn btn-outline-primary">
            <span class="bi bi-plus-circle-fill"></span>
            Issue Invoice
        </button>
    </span>
</div>

<div>
    <SfGrid DataSource="@_invoices" AllowFiltering="true" AllowPaging="true" AllowSorting="true">
        <GridPageSettings PageSize="10"></GridPageSettings>
        <GridColumns>
            <GridColumn Field="@nameof(InvoiceListComponentModel.InvoiceId)" HeaderText="Invoice ID" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(InvoiceListComponentModel.CustomerName)" HeaderText="Customer Name" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(InvoiceListComponentModel.TransactionDate)" HeaderText="Payment Date" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(InvoiceListComponentModel.DueDate)" HeaderText="Due Date" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(InvoiceListComponentModel.InvoicePaymentStatus)" HeaderText="Is It Paid up" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn Field="@nameof(InvoiceListComponentModel.NumberOfOrders)" HeaderText="Orders" TextAlign="TextAlign.Center"></GridColumn>
            <GridColumn>
                <Template>
                    @{
                        var invoice = (context as InvoiceListComponentModel);
                                        <span class="btn-group">
                                            <button class="btn btn-outline-info btn-sm" @onclick="@(() => Console.WriteLine("Clicked!"))"><span class="bi bi-eye-fill"></span></button>
                                            <button class="btn btn-outline-info btn-sm" @onclick="@(() => Console.WriteLine("Clicked!"))"><span class="bi bi-pencil-square"></span></button>
                                            <button class="btn btn-outline-danger btn-sm" @onclick="@(() => Console.WriteLine("Clicked!"))">
                                                <span class="bi bi-trash2-fill"></span>
                                            </button>
                                        </span>
                    }
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
</div>

@code {
    List<InvoiceListComponentModel> _invoices = new List<InvoiceListComponentModel>();


    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync<List<InvoiceListComponentModel>>("api/invoices");

        if (response.Success)
        {
            _invoices = response.Response;
        }

    }

}
