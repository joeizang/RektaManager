@using RektaManagerApp.Shared
@using RektaManagerApp.Shared.ComponentModels.Orders
@using Blazored.LocalStorage
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IHttpService Http
@inject IOrderService OrderService
@inject NavigationManager Navigation
<h3>Add <b>@Model.ItemName</b></h3>
<EditForm Model="@NewOrderedItem" OnValidSubmit="HandleOrderAddition">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="itemName"><b> Item Name :</b></label>
        <InputText @bind-Value="@Model.ItemName" readonly class="form-control col-sm-6" id="itemName" />
    </div>

    <div class="form-group">
        <label for="itemPrice"><b> Price :</b></label>
        <InputNumber TValue="decimal" @bind-Value="@Model.Price" readonly class="form-control col-sm-4" id="itemPrice" />
    </div>

    <div class="form-group">
        <label for="itemQuantity"><b> Quantity :</b></label>
        <InputNumber TValue="float" @bind-Value="@Model.Quantity" class="form-control col-sm-4" id="itemQuantity" />
        <ValidationMessage For="@(() => Model.Quantity)" />
    </div>

    <div class="form-group">
        <span class="text-danger">
            <ValidationSummary />
        </span>
    </div>
    <div class="form-group"><button class="btn btn-success" type="submit">Add</button></div>
</EditForm>

@code {
    [Parameter]
    public OrderItemComponentModel Model { get; set; }

    [Parameter]
    public EventCallback HandleOrderAddition { get; set; }

    [Parameter]
    public OrderedItemUpsertComponentModel NewOrderedItem { get; set; }

}
