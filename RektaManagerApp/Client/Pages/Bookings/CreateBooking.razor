@page "/bookings/create-booking"
@using RektaManagerApp.Shared.ComponentModels.Bookings
@using RektaManagerApp.Shared.ComponentModels.Services
@inject IToastService Toast
@inject IHttpService Http

<div class="d-flex justify-content-center align-items-center mb-3">
    <h3 class="h3">Create Booking</h3>
</div>

<BookingForm BookedItemDropdown="@_bookedItemDropdown"
             ServicesDropdown="@_serviceDropdown"
             Model="@booking"
             HandleSubmit="HandleCreate"
             ServiceChoices="@ServiceChoices"
             BookedItemChoices="@BookedItemChoices"></BookingForm>

@code {
    private BookingUpsertComponentModel booking = new();

    private List<ServiceDropdownModel> _serviceDropdown = new();

    private List<BookedItemDropdownModel> _bookedItemDropdown = new();

    public List<int> ServiceChoices { get; set; } = new();

    public List<int> BookedItemChoices { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var serviceResult = await Http.GetAsync<List<ServiceDropdownModel>>("api/services/servicesDropdown");

            if (serviceResult.Success)
                _serviceDropdown = serviceResult.Response;
            Console.WriteLine($"service dropdown is populated and length is {_serviceDropdown.Count}");

            var bookedItemResult = await Http.GetAsync<List<BookedItemDropdownModel>>("api/bookings/bookedItemDropdown");

            if (bookedItemResult.Success)
                _bookedItemDropdown = bookedItemResult.Response;
            Console.WriteLine($"bookedItem dropdown is populated and length is {_bookedItemDropdown.Count}");
        }
        catch (Exception)
        {

            throw;
        }
    }

    private async Task HandleCreate()
    {

    }
}
