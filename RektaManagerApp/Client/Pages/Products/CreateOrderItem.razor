@page "/products/create-orderitem"
@using RektaManagerApp.Shared
@inject IHttpService Http
@inject IToastService Toast
@inject NavigationManager Navigation 

<h3 class="h3">Create Order Item</h3>

<div class="d-flex card shadow justify-content-center align-items-center rounded pt-4 pb-4 col-xs-6 col-sm-6 col-md-6 col-lg-10">
    <EditForm Model="@orderItem" OnValidSubmit="CreateMenuItem" class="w-75 pr-3">
        <DataAnnotationsValidator />
        <div class="form-group">
            <div>
                <label for="itemname"><b>Menu Name :</b></label>
                <InputText @bind-Value="orderItem.ItemName" id="itemname" class="form-control" placeholder="Menu Item Name..." />
                <span class="text-danger"><ValidationMessage For="@(() => orderItem.ItemName)" /></span>
            </div>
        </div>
        <div class="form-group">
            <div>
                <label for="itemcode">
                    <b>Menu Code :</b>
                </label>
                <InputText @bind-Value="orderItem.ItemCode" id="itemcode" class="form-control" placeholder="Menu Item Code" />
                <span class="text-danger"><ValidationMessage For="@(() => orderItem.ItemCode)" /></span>
            </div>
        </div>
        <div class="form-group">
            <div>
                <label>
                    <b>Price :</b>
                </label>
                <InputNumber @bind-Value="orderItem.Price" id="menuItemPrice" class="form-control" placeholder="Menu Item Price" />
                <span class="text-danger"><ValidationMessage For="@(() => orderItem.Price)" /></span>
            </div>
        </div>
        <div class="form-group">
            <div>
                <label for="menuImageUrl">
                    <b>Image Url :</b>
                </label>
                <InputText @bind-Value="orderItem.ImageUrl" id="menuImageUrl" class="form-control" placeholder="Menu Item Image Url" />
                <span class="text-danger"><ValidationMessage For="@(() => orderItem.ImageUrl)" /></span>
            </div>
        </div>
        <div class="form-group">
            <div>
                <button class="btn btn-info btn-block">
                    <span class="bi bi-plus-square-fill"></span>
                    Add Menu Item
                </button>
            </div>
        </div>
        <div class="form-group">
            <div class="justify-content-center">
                <span style="display: @_visibility; ">
                    <ActionSpinner ActionName="Please wait..." ColorVariant="text-warning" SpinnerSize="width: 3rem; height: 3rem;" SpinnerType="spinner-grow" />
                </span>
            </div>
        </div>
    </EditForm>
</div>

@code {
    private OrderItem orderItem = new();
    private string _visibility = "none";

    private async Task CreateMenuItem()
    {
        _visibility = "inline";
        await Task.Delay(3000);
        var response = await Http.Post<OrderItem>("api/products/orderItems", orderItem);

        if (response.Success)
        {
            Toast.ShowSuccess("Menu Item created successfully!", "Menu Creation Successful");
            Navigation.NavigateTo("products");
        }
        _visibility = "none";
    }
}
