@page "/products/edit/{ProductId:int}"
@using RektaManager.Shared.ComponentModels.Products
@using RektaManager.Client.Utils
@using RektaManager.Shared.ComponentModels.Inventories
@inject IHttpService HttpService
@inject IToastService Toast
@inject NavigationManager Navigation




<h3>Update Product</h3>

<ProductForm
    Model="@product"
    ButtonText="Update Product"
    SpinnerText="Updating..."
    SpinnerColor="text-warning"
    ShowSpinnerStatus="@_showSpinnerStatus"
    Inventories="@inventories"
    HandleFormSubmit="@HandleSubmit"
    ></ProductForm>

@code {

    [Parameter]
    public int ProductId { get; set; }

    private ProductUpsertComponentModel product = new ProductUpsertComponentModel();
    public List<InventorySelectModel> inventories = new List<InventorySelectModel>();
    string _showSpinnerStatus = "none";

    protected override async Task OnInitializedAsync()
    {
        var response = await HttpService.GetByIdAsync<ProductUpsertComponentModel>($"api/products/{ProductId}");
        var inventoryResponse = await HttpService.GetAsync<List<InventorySelectModel>>("api/selectInventories");
        inventories = inventoryResponse.Response;
        product = response.Response;
    }

    async Task HandleSubmit()
    {
        _showSpinnerStatus = "inline";
        var response = await HttpService.PutAsync($"api/products/{ProductId}", product);

        if (response.Success == true)
        {
            Toast.ShowSuccess("Update Successful", "Success");
            Navigation.NavigateTo("products");
        }
        Toast.ShowError($"There was an error with error code {response.HttpResponseMessage.StatusCode}");
    }

}
