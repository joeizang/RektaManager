@using RektaManager.Shared.ComponentModels.Products
@using RektaManager.Shared.ComponentModels.Inventories
@using RektaManager.Shared
<div class="d-flex card shadow justify-content-center align-items-center rounded pt-1 pb-4 col-12">
    <EditForm Model="@Model" OnValidSubmit="@HandleFormSubmit">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <div class="col-sm-10">
                <label for="productName">Product Name</label>
                <InputText @bind-Value="@Model.Name" id="productName" class="form-control"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-10">
                <label for="productPrice">Product Price</label>
                <InputNumber class="form-control" id="productPrice" @bind-Value="@Model.CostPrice"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-10">
                <label for="productQuantity">Product Quantity</label>
                <InputNumber class="form-control" id="productQuantity" @bind-Value="@Model.QuantityBought"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-10">
                <label for="uniqueId">Product Unique Id</label>
                <InputText readonly @bind-Value="Model.ProductUniqueIdentifier" id="uniqueId" class="form-control"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-10">
                <label for="inventories">Inventory</label>
                <InputSelect @bind-Value="@Inventories" id="inventories" class="form-control" DisplayName="Inventory Id">
                    @foreach(var option in Inventories)
                    {
                        <option value="@option.InventoryId">@option.InventoryName</option>
                    }
                </InputSelect>
            </div>
        </div>
        <div class="form-group">
            <div>
                <label for="unitMeasure">Unit Measure</label>
                <InputSelect id="unitMeasure" @bind-Value="@Model.UnitMeasure" class="form-control">
                    <option>Select a Measurement...</option>
                    @foreach (var option in Enum.GetValues<UnitMeasure>())
                    {
                        <option>@option</option>
                    }
                </InputSelect>
            </div>
        </div>
        <div class="form-group">
            <div>
                <label for="description">Description</label>
                <InputTextArea id="description" class="form-control" @bind-Value="@Model.Description" />
            </div>
        </div>
        <div class="form-group">
            <span>
                <button type="submit" class="btn btn-primary col-12">@ButtonText</button>
            </span>
            <span style="display: @ShowSpinnerStatus">
                <ActionSpinner ActionName="@SpinnerText" ColorVariant="@SpinnerColor"></ActionSpinner>
            </span>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public ProductUpsertComponentModel Model { get; set; }

    [Parameter]
    public EventCallback HandleFormSubmit { get; set; }

    [Parameter]
    public List<InventorySelectModel> Inventories { get; set; }

    [Parameter]
    public string SpinnerText { get; set; }

    [Parameter]
    public string SpinnerColor { get; set; }

    [Parameter]
    public string ButtonText { get; set; }

    [Parameter]
    public string ShowSpinnerStatus { get; set; }
    
}
