@page "/inventory/details/{InventoryId:int}"
@using RektaManager.Client.Utils
@using RektaManager.Shared.ComponentModels.Inventories
@using System.Text.Json
@inject HttpClient HttpService


<h3>Inventory Detail</h3>

<div class="d-flex justify-content-center align-items-center">
    <div class="card shadow p-0 bg-white rounded">
        <h5 class="card-header bg-secondary">@_details.InventoryName</h5>
        <div class="card-body">
            <p><b>Created On :</b>@_details.Date.ToString("dd-MMM-yyyy")</p>
            <p><b>At :</b>@_details.Date.ToLocalTime().ToString("h:mm:ss tt zz")</p>
            <p class="card-subtitle text-center font-weight-bold">Products</p>
            <ul class="list-group list-group-flush">
                @if (_details.ProductNames is null || !_details.ProductNames.Any())
                {
                    <li class="list-group-item">No Products for Now.</li>
                }
                else
                {
                    @foreach (var name in _details.ProductNames)
                    {
                        <li class="list-group-item">@name</li>
                    }
                }
            </ul>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public int InventoryId { get; set; }

    private InventoryDetailComponentModel _details = new InventoryDetailComponentModel();

    protected override async Task OnInitializedAsync()
    {
        _details.InventoryCategories = new List<string>();
        try
        {
            var response = await HttpService.GetAsync($"api/inventories/{InventoryId}");

            if (response.IsSuccessStatusCode)
            {
                _details = JsonSerializer
                    .Deserialize<InventoryDetailComponentModel>(await response.Content.ReadAsStringAsync(),
                        new JsonSerializerOptions() {PropertyNameCaseInsensitive = true});
            }
            _details.ProductNames = new List<string>() { "Gulder", "Star", "Star Lite", "33 Beer" };
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

    }

}
