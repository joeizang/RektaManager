@page "/inventory/edit/{InventoryId:int}"
@using RektaManager.Shared.ComponentModels.Inventories
@using RektaManager.Client.Utils
@inject IHttpService HttpService
@inject IToastService Toast
@inject NavigationManager NavigationMgr


<div class="d-flex justify-content-center align-items-center">
    <h3 class="h3">Update Inventory</h3>
</div>

@if (!(_inventory is null))
{
    <InventoryForm Disabled="@_disabledState" 
                   Model="@_inventory" 
                   SubmitForm="@Update" 
                   ButtonActionName="Update"
                   ShowSpinner="@_showSpinner"
                   SpinnerActionName="Updating..."
                   SpinnerColor="text-warning"
    />
}

@code {

    [Parameter]
    public int InventoryId { get; set; }

    private bool _disabledState;

    private bool _showSpinner;

    private InventoryUpsertComponentModel _inventory;

    protected override async Task OnInitializedAsync()
    {
        _inventory = new InventoryUpsertComponentModel();
        var result = await HttpService
        .GetByIdAsync<InventoryUpsertComponentModel>($"api/inventories/{InventoryId}");
        _inventory = result.Response;
        Console.WriteLine(result.Response);
    }

    private async Task Update()
    {
        _disabledState = true;
        _showSpinner = true;

        try
        {
            if (!(_inventory is null))
            {
                Console.WriteLine("inventory is not null");
                var result = await HttpService.PutAsync($"api/inventories", _inventory);

                if(result.Success)
                {
                    _showSpinner = false;
                    Toast.ShowInfo("Inventory updated successfully","Updating Inventory");
                    NavigationMgr.NavigateTo("inventory");
                }
            }
        }
        catch (Exception e)
        {
            Toast.ShowError(e.Message,"Error Updating");
            throw;
        }
    }

}
