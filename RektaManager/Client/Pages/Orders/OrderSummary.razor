@page "/orders"
@inject IHttpService Http
@inject NavigationManager Navigation
@using RektaManager.Shared.ComponentModels.Orders

<div class="d-flex justify-content-center align-items-center">
    <p class="h3">Orders Made</p>
</div>


<div class="mt-4">
    <div class="mb-4 d-flex justify-content-between align-content-center">
        <span>
            <button @onclick="@(() => Navigation.NavigateTo("orders/make-orders"))" class="btn btn-outline-info bi bi-plus-circle-fill">
                Place Order
            </button>
        </span>
    </div>

    <RadzenDataGrid Count="_orders.Count" Style="" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Simple" AllowPaging="true" PageSize="10" Data="_orders" TItem="OrderComponentModel">
        <Columns>
            <RadzenGridColumn TItem="OrderComponentModel" Property="OrderId" Filterable="false" Title="ID" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="OrderComponentModel" Property="OrderDate" Filterable="true" Title="Order Date" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="OrderComponentModel" Property="StaffName" Filterable="true" Title="Staff Name" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="OrderComponentModel" TextAlign="TextAlign.Center" Title="Customer Name" Property="CustomerName" Filterable="true" />
            <RadzenDataGridColumn TItem="OrderComponentModel" TextAlign="TextAlign.Center" Title="Number of Ordered Items" Filterable="true">
                <Template Context="order">
                    @order.OrderedItems.Count()
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="OrderComponentModel" TextAlign="TextAlign.Center" Title="Order Total" Property="OrderTotal" Filterable="true"/>
        </Columns>
    </RadzenDataGrid>
</div>

@code {
    List<OrderComponentModel> _orders = new List<OrderComponentModel>();

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync<List<OrderComponentModel>>("api/orders");

        if (response.Success == false)
            _orders = new List<OrderComponentModel>();
        _orders = response.Response;
    }

}
